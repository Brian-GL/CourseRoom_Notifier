/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author LENOVO
 */
public class CourseRoom_Notifier_Frame extends javax.swing.JFrame {

    private ServerSocket serverSocket;
    private Conexion_Servidor conexion_Servidor;
    
    /**
     * Creates new form CourseRoom_Notifier_Frame
     */
    public CourseRoom_Notifier_Frame() {
        initComponents();
        
        Image logo_Imagen;
        try {
            logo_Imagen = ImageIO.read(getClass().getResource("/recursos/imagenes/Course_Room_Brand_Blue.png"));
            logo_Imagen = logo_Imagen.getScaledInstance(150, 125, Image.SCALE_SMOOTH);
            this.setIconImage(logo_Imagen);
            ImageIcon icono = new ImageIcon(logo_Imagen);
            logo_Inicio_JLabel.setIcon(icono);
            logo_Imagen.flush();
            icono.getImage().flush();
            serverSocket = new ServerSocket(9001);
        } catch (IOException ex) {
            
        }
        
        Color color_Azul_Oscuro = new Color(14, 30, 64);
        Color color_Azul_Claro = new Color(104, 194, 232);
        descripcion_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        descripcion_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        descripcion_JTextPane.setBackground(color_Azul_Claro);
        descripcion_JTextPane.setForeground(color_Azul_Oscuro);
        descripcion_JTextPane.setCaretColor(color_Azul_Oscuro);
        descripcion_JScrollPane.setForeground(color_Azul_Oscuro);
        
        conexion_Servidor = new Conexion_Servidor();
        conexion_Servidor.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        visualizador_JPanel = new javax.swing.JPanel();
        logo_Inicio_JLabel = new javax.swing.JLabel();
        descripcion_JScrollPane = new javax.swing.JScrollPane();
        descripcion_JTextPane = new javax.swing.JTextPane();
        titulo_Inicio_JLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CourseRoom Notifier");
        setMinimumSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        visualizador_JPanel.setBackground(new java.awt.Color(14, 30, 64));
        visualizador_JPanel.setForeground(new java.awt.Color(104, 194, 232));

        logo_Inicio_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo_Inicio_JLabel.setMaximumSize(new java.awt.Dimension(150, 125));
        logo_Inicio_JLabel.setMinimumSize(new java.awt.Dimension(150, 125));
        logo_Inicio_JLabel.setPreferredSize(new java.awt.Dimension(150, 125));

        descripcion_JTextPane.setEditable(false);
        descripcion_JTextPane.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        descripcion_JTextPane.setToolTipText("");
        descripcion_JScrollPane.setViewportView(descripcion_JTextPane);

        titulo_Inicio_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        titulo_Inicio_JLabel.setForeground(new java.awt.Color(104, 194, 232));
        titulo_Inicio_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_Inicio_JLabel.setText("Notificador");
        titulo_Inicio_JLabel.setPreferredSize(new java.awt.Dimension(670, 48));

        javax.swing.GroupLayout visualizador_JPanelLayout = new javax.swing.GroupLayout(visualizador_JPanel);
        visualizador_JPanel.setLayout(visualizador_JPanelLayout);
        visualizador_JPanelLayout.setHorizontalGroup(
            visualizador_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visualizador_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visualizador_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logo_Inicio_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addComponent(descripcion_JScrollPane)
                    .addComponent(titulo_Inicio_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
                .addContainerGap())
        );
        visualizador_JPanelLayout.setVerticalGroup(
            visualizador_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visualizador_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo_Inicio_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titulo_Inicio_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcion_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(visualizador_JPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            
            conexion_Servidor.interrupt();
            
            // Cerrando la conex贸n
            serverSocket.close();
            
            
            System.exit(0);
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_formWindowClosing

   
    private class Conexion_Servidor extends Thread{
        
        @Override
        public void run(){
            BufferedReader entrada;
            DataOutputStream salida;
            Socket socket;

            try {



                Agregar_Texto("Esperando una conexi贸n...\n");

                while(serverSocket != null){

                    socket = serverSocket.accept();

                    Agregar_Texto("El servidor de CourseRoom se ha conectado...\n");

                    // Para los canales de entrada y salida de datos

                    entrada = new BufferedReader(new InputStreamReader(
                             socket.getInputStream()));

                    salida = new DataOutputStream(socket.getOutputStream());

                    Agregar_Texto("Confirmando conexion al cliente....\n");

                    salida.writeUTF("Conexi贸n exitosa...");

                    // Para recibir el mensaje

                    String mensajeRecibido = entrada.readLine();


                    Agregar_Texto(mensajeRecibido+" Tiene Una Nueva Actualizaci贸n!");

                    salida.writeUTF("Se recibio tu mensaje.");

                    salida.writeUTF("Gracias por conectarte.");

                }



            } catch (IOException e) {
                 Agregar_Texto("Error de entrada/salida."  + e.getMessage());
            }
        }
    }

    private void Agregar_Texto(String texto){
        try {
            Document doc = descripcion_JTextPane.getDocument();
            doc.insertString(doc.getLength(), texto, null);
        } catch(BadLocationException exc) {
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane descripcion_JScrollPane;
    private javax.swing.JTextPane descripcion_JTextPane;
    private javax.swing.JLabel logo_Inicio_JLabel;
    private javax.swing.JLabel titulo_Inicio_JLabel;
    private javax.swing.JPanel visualizador_JPanel;
    // End of variables declaration//GEN-END:variables
}
